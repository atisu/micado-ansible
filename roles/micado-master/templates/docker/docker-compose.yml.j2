version: '3.3'

services:
   submitter:
     image: micado/micado-submitter:1.1
     container_name: micado-submitter
     volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/micado/occopus/data/:/var/lib/micado/occopus/data/"
      - "/var/lib/micado/submitter/data/:/var/lib/micado/submitter/data/"
     environment:
       # Input template files
       TEMP_AUTH_DATA_FILE: /var/lib/micado/occopus/data/auth_data.yaml
       TEMP_NODE_DEF_FILE: /var/lib/micado/submitter/data/temp_node_definitions.yaml
       TEMP_INFRA_DEF_FILE: /var/lib/micado/submitter/data/temp_infrastructure_descriptor.yaml
       # Input user data files
       USER_DATA_FILE: /var/lib/micado/submitter/data/temp_user_data.yaml
       # Output occopus descriptors
       AUTH_DATA_FILE: /var/lib/micado/occopus/data/auth_data.yaml
       NODE_DEF_FILE: /var/lib/micado/occopus/data/nodes/node_definitions.yaml
       INFRA_DEF_FILE: /var/lib/micado/occopus/data/infrastructure_descriptor.yaml
       MASTER_IP: {{ ansible_default_ipv4.address }}
       WORKER_INFRA_NAME: micado_worker_infra
     command: python /app/submitter/submitter.py

   redis:
    image: redis
    container_name: occopus_redis
    restart: always
    volumes:
      - "/var/lib/micado/redis/data/:/data/"
    command: redis-server --appendonly yes

   occopus:
    image: micado/occopus:1.6-rc1
    container_name: occopus
    depends_on:
      - redis
      - submitter
    ports:
      - 5000:5000
    volumes:
      - "/var/lib/micado/occopus/data/:/var/lib/micado/occopus/data/"
      - "/var/lib/micado/occopus/log/:/var/log/occopus"
    environment:
      - REDIS_NAME=redis
      - LOG_DIR=/var/log/occopus
    command: occopus-rest-service --auth_data_path /var/lib/micado/occopus/data/auth_data.yaml --host 0.0.0.0

   consul:
    image: consul:1.0.0
    container_name: consul
    restart: always
    ports:
      - 8300:8300
      - 8301:8301
      - 8301:8301/udp
      - 8302:8302
      - 8302:8302/udp
      - 8500:8500
      - 8600:8600
      - 8600:8600/udp
    volumes:
      - "/var/lib/micado/consul/config/:/consul/config/"
      - "/var/lib/micado/consul/data/:/consul/data/"
    command: agent -server -client=0.0.0.0 -advertise={{ ansible_default_ipv4.address }} -bootstrap=true -ui

   prometheus:
    image: prom/prometheus:v2.1.0
    container_name: prometheus
    restart: always
    depends_on:
      - consul
    ports:
      - 9090:9090
    volumes:
      - "/var/lib/micado/prometheus/config/:/etc/prometheus/"
      #- "/var/lib/micado/prometheus/data/:/prometheus/"
    command: '--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --web.enable-lifecycle'

   alertmanager:
    image: prom/alertmanager:v0.12.0
    container_name: alertmanager
    depends_on:
      - prometheus
    ports:
      - 9093:9093
    volumes:
      - "/var/lib/micado/alertmanager/config/:/etc/alertmanager/"
      - "/var/lib/micado/alertmanager/data/:/alertmanager/"

   policykeeper:
    image: micado/policykeeper:0.1-dev-frame
    container_name: policykeeper
    depends_on:
      - occopus
      - prometheus
    ports:
      - 12345:12345
    volumes:
      - "/var/lib/micado/policykeeper/src/:/policykeeper/"
      - "/var/lib/micado/policykeeper/config/:/config/policykeeper"
      - "/var/lib/micado/prometheus/config/:/config/prometheus"
    command: /policykeeper/policy_keeper.py --srv --cfg /config/policykeeper/policykeeper_config.yaml

