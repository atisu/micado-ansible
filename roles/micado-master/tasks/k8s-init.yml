---
- name: 'K8s: check membership'
  shell: kubeadm token list
  register: k8smember
  changed_when: k8smember.rc == 1
  failed_when: k8smember.rc not in [0,1]

- name: 'K8s: Initialization'
  shell: kubeadm init
        --apiserver-advertise-address={{ ansible_default_ipv4.address }}
        --pod-network-cidr=10.244.0.0/16
        --ignore-preflight-errors=NumCPU
  when: k8smember.rc == 1

- name: 'K8s: Create /root/.kube'
  file:
    state: directory
    path: /root/.kube

- name: 'K8s: Copy admin.conf to .kube/'
  copy:
    remote_src: yes
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config

- name: 'K8s: Add kube/config to ENV'
  lineinfile:
    path: /etc/environment
    line: 'KUBECONFIG=/root/.kube/config'

- name: 'K8s: Copy KubeDashboard deployment'
  copy:
    src: kubernetes/kubedash.yaml
    dest: /etc/kubernetes/kubedash.yaml
    mode: 0644

- name: 'K8s: Install Dashboard'
  shell: kubectl apply -f /etc/kubernetes/kubedash.yaml

- name: 'K8s: Get join command'
  shell: kubeadm token create --ttl 0 --print-join-command
  register: join_command

- name: 'K8s: Copy kube-flannel deployment'
  copy:
    src: kubernetes/kube-flannel.yaml
    dest: /etc/kubernetes/kube-flannel.yaml
    mode: 0644

- name: 'K8s: Install Flannel pod network'
  shell: kubectl apply -f /etc/kubernetes/kube-flannel.yaml

- name: 'K8s: Copy dashboard role file'
  copy:
    src: kubernetes/kubedash-role.yaml
    dest: /etc/kubernetes/kubedash-role.yaml
    mode: 0644

- name: 'K8s: Create ro-dashboard ClusterRole'
  shell: kubectl apply -f /etc/kubernetes/kubedash-role.yaml

- name: 'K8s: Copy dashboard role binding file'
  copy:
    src: kubernetes/kubedash-binding.yaml
    dest: /etc/kubernetes/kubedash-binding.yaml
    mode: 0644

- name: 'K8s: Grant dashboard admin rights'
  shell: kubectl apply -f /etc/kubernetes/kubedash-binding.yaml

- name: 'K8s: Setup insecure host in APIServer'
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    insertafter: '^    - kube-apiserver'
    line: '    - --insecure-bind-address=0.0.0.0'

- name: 'K8s: Setup insecure port in APIServer'
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    regexp: '^    - --insecure-port=\d*'
    line: '    - --insecure-port=8001'